# Generated by Django 5.0.2 on 2024-02-26 11:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='Cassa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amout', models.DecimalField(decimal_places=2, max_digits=55)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(upload_to='foto/', verbose_name='Rasm')),
                ('passport_seria', models.CharField(max_length=55, verbose_name='Passport seriasi')),
                ('age', models.IntegerField(verbose_name='Yosh')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon raqam')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Famale', 'Famale')], max_length=55, verbose_name='Jins')),
                ('slugify', models.SlugField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.address', verbose_name='Yashash joyi')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=155)),
                ('age', models.IntegerField(default=19)),
                ('specialty', models.CharField(max_length=55)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('extra_phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('salary', models.DecimalField(decimal_places=2, max_digits=15)),
                ('start_work_time', models.TimeField()),
                ('end_work_time', models.TimeField()),
                ('started_work', models.DateField(auto_now=True)),
                ('slugify', models.SlugField()),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=55)),
                ('suggestions', models.CharField(max_length=55)),
                ('age', models.IntegerField(default=0)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('email', models.EmailField(max_length=254)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('slugify', models.SlugField()),
                ('adress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.address')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Cashflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.CharField(max_length=255)),
                ('payment_type', models.CharField(choices=[('Karta', 'Karta'), ('Naqd', 'Naqd')], max_length=55)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('slugify', models.SlugField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('number', models.IntegerField(default=0)),
                ('place', models.IntegerField(default=0)),
                ('busy_empty', models.FloatField()),
                ('deparment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.department')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.room'),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateField(verbose_name='boshlanadigan kun')),
                ('start_time', models.TimeField(verbose_name='aperatsi boshlanosh vaqti ')),
                ('end_time', models.TimeField(verbose_name='aperatsi tugash vaqti ')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan b-vaqt')),
                ('doctors', models.ManyToManyField(to='main.employee', verbose_name='xodim')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='bemor')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.room', verbose_name='xona')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('type', models.CharField(max_length=55)),
                ('number', models.IntegerField(default=0)),
                ('room', models.ManyToManyField(to='main.room')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.room'),
        ),
        migrations.CreateModel(
            name='Testimonal_patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(max_length=55)),
                ('complaints', models.CharField(max_length=55)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('chek_in', models.TimeField(blank=True, null=True)),
                ('chek_out', models.TimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
